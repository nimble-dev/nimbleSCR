% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbinom_SparseLocalSCR.R
\name{dbinom_sparseLocalSCR}
\alias{dbinom_sparseLocalSCR}
\alias{rbinom_sparseLocalSCR}
\title{Local evaluation of a binomial SCR observation process}
\usage{
dbinom_sparseLocalSCR(x, detNums, detIndices, size, p0, sigma, s,
  trapCoords, localTrapsIndices, localTrapsNum, resizeFactor = 1,
  habitatGrid, indicator = 1, log = 0)

rbinom_sparseLocalSCR(n = 1, detNums, detIndices, size, p0, sigma, s,
  trapCoords, localTrapsIndices, localTrapsNum, resizeFactor = 1,
  habitatGrid, indicator = 1)
}
\arguments{
\item{x}{vector of individual detection frequencies, as returned by the getSparseY function 
(padded with -1's to maintain the square structure of the observation data).}

\item{detNums}{number of detections recorded in x, as returned by the getSparseY function.}

\item{detIndices}{vector of the detector indices where the detections in x were recorded, as returned by the getSparseY function.}

\item{size}{vector of number of trials (zero or more).}

\item{p0}{Baseline detection probability used in the half-normal detection function.}

\item{sigma}{Scale parameter of the half-normal detection function.}

\item{s}{Bivariate activity center coords.}

\item{trapCoords}{matrix of x- and y-coordinate locations of all traps}

\item{localTrapsIndices}{Matrix of indices of local traps around all habitat grid cells, as returned by the getLocalTraps function.}

\item{localTrapsNum}{Vector of numbers of local traps around all habitat grid cells, as returned by the getLocalTraps function.}

\item{resizeFactor}{aggregation factor used in the getLocalTraps function to reduce the number of habitat grid cells to retrieve local traps for.}

\item{habitatGrid}{matrix of habitat grid cells indices.}

\item{indicator}{Logical argument, specifying whether the current individual is available or not for detection.}

\item{log}{Logical argument, specifying whether to return the log-probability of the distribution.}

\item{n}{Integer specifying the number of realisations to generate.  Only n = 1 is supported.}
}
\value{
The log-likelihood value associated with the vector of SCR observations, given the current activity center (s),
 and the half-normal detection function : p = p0 * exp(-d^2 / sigma^2).
}
\description{
The \code{dbinom_sparseLocalSCR} distribution is a NIMBLE custom distribution which can be used to model 
the binomial observations (x) of a single individual over a set of detectors defined by their 
coordinates (trapCoords). The distribution assumes that the detection probability at any detector 
follows a half-normal function of the distance between the individual's activity center (s) and the detector location.
}
\details{
The dbinom_sparseLocalSCR distribution incorporates three features to increase computation efficiency:
1 - A local evaluation of the detection probability calculation (see Milleret et al., 2019 for more details)
2 - It uses a sparse matrix representation (x, detIndices, detNums) of the observation data to reduce the size of objects to be processed.
3 - It uses an indicator (indicator) to shortcut calculations for individuals unavailable for detection.
}
\examples{
\donttest{
## define model code
nimModel <- nimbleCode({
 
    psi ~ dunif(0,1)
    p0 ~ dunif(0,1)
    sigma ~ dunif(0,100)
 
    N <- sum(z[1:M])
 
    for(i in 1:M) {
        s[i, 1] ~ dunif(0, 100)
        s[i, 2] ~ dunif(0, 100)
        
        z[i] ~ dbern(psi)
        
        y[i,1:maxDetNum] ~ dbinom_sparseLocalSCR( detNums = double(0),
                                                 detIndices = double(1),
                                                 size = double(1),
                                                 p0 = double(0),
                                                 sigma = double(0),
                                                 s = double(1),
                                                 trapCoords = double(2),
                                                 localTrapsIndices = double(2),
                                                 localTrapsNum = double(1),
                                                 resizeFactor = double(0, default = 1),
                                                 habitatGrid = double(2),
                                                 indicator = double(0, default = 1.0)
                                                 )
    }
})
 
## create NIMBLE model object
Rmodel <- nimbleModel(code)
 
## use model object for MCMC, etc.
}

}
\author{
Cyril Milleret
}
